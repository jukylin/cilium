// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cilium/cilium_l7policy.proto

package cilium

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import envoy_api_v2_core2 "github.com/cilium/cilium/pkg/envoy/envoy/api/v2/core"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type L7Policy struct {
	// Path to the unix domain socket for the cilium access log.
	AccessLogPath string `protobuf:"bytes,1,opt,name=access_log_path,json=accessLogPath" json:"access_log_path,omitempty"`
	// Cilium identifier for the listener.
	ListenerId string `protobuf:"bytes,2,opt,name=listener_id,json=listenerId" json:"listener_id,omitempty"`
	// gRPC API config source for network policy
	ApiConfigSource *envoy_api_v2_core2.ApiConfigSource `protobuf:"bytes,4,opt,name=api_config_source,json=apiConfigSource" json:"api_config_source,omitempty"`
}

func (m *L7Policy) Reset()                    { *m = L7Policy{} }
func (m *L7Policy) String() string            { return proto.CompactTextString(m) }
func (*L7Policy) ProtoMessage()               {}
func (*L7Policy) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *L7Policy) GetAccessLogPath() string {
	if m != nil {
		return m.AccessLogPath
	}
	return ""
}

func (m *L7Policy) GetListenerId() string {
	if m != nil {
		return m.ListenerId
	}
	return ""
}

func (m *L7Policy) GetApiConfigSource() *envoy_api_v2_core2.ApiConfigSource {
	if m != nil {
		return m.ApiConfigSource
	}
	return nil
}

func init() {
	proto.RegisterType((*L7Policy)(nil), "cilium.L7Policy")
}

func init() { proto.RegisterFile("cilium/cilium_l7policy.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x40, 0x89, 0xc8, 0xb2, 0x66, 0x91, 0xc5, 0x9c, 0x8a, 0x08, 0x2e, 0x0b, 0xca, 0x9e, 0x12,
	0xa8, 0x87, 0x9e, 0xd5, 0x93, 0x50, 0xa4, 0xd4, 0x9b, 0x97, 0x10, 0xd3, 0xd8, 0x0e, 0xc4, 0x4e,
	0x48, 0xd2, 0x42, 0xbf, 0xc7, 0x1f, 0x15, 0x13, 0x3d, 0xf4, 0x34, 0xf0, 0x78, 0xcc, 0xbc, 0xa1,
	0x37, 0x1a, 0x2c, 0x4c, 0x5f, 0x22, 0x0f, 0x69, 0x2b, 0x87, 0x16, 0xf4, 0xc2, 0x9d, 0xc7, 0x88,
	0x6c, 0x93, 0xf1, 0xf5, 0x9d, 0x19, 0x67, 0x5c, 0x84, 0x72, 0x20, 0xe6, 0x52, 0x68, 0xf4, 0x46,
	0x68, 0x1c, 0x3f, 0xa1, 0x97, 0x01, 0x27, 0xaf, 0x4d, 0xd6, 0x8f, 0xdf, 0x84, 0x6e, 0xeb, 0xaa,
	0x49, 0x1b, 0xd8, 0x3d, 0xdd, 0x2b, 0xad, 0x4d, 0x08, 0xd2, 0x62, 0x2f, 0x9d, 0x8a, 0x43, 0x41,
	0x0e, 0xe4, 0x74, 0xd1, 0x5e, 0x66, 0x5c, 0x63, 0xdf, 0xa8, 0x38, 0xb0, 0x5b, 0xba, 0xb3, 0x10,
	0xa2, 0x19, 0x8d, 0x97, 0xd0, 0x15, 0x67, 0xc9, 0xa1, 0xff, 0xe8, 0xa5, 0x63, 0xaf, 0xf4, 0x4a,
	0x39, 0x90, 0xab, 0x83, 0xc5, 0xf9, 0x81, 0x9c, 0x76, 0xe5, 0x91, 0xa7, 0x30, 0xae, 0x1c, 0xf0,
	0xb9, 0xe4, 0xbf, 0x61, 0xfc, 0xd1, 0xc1, 0x73, 0x52, 0xdf, 0x92, 0xd9, 0xee, 0xd5, 0x1a, 0x3c,
	0x6d, 0xdf, 0xff, 0xde, 0xfa, 0xd8, 0xa4, 0xec, 0x87, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x29,
	0x70, 0x78, 0x97, 0x05, 0x01, 0x00, 0x00,
}
